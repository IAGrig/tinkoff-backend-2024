/*
 * This file is generated by jOOQ.
 */
package edu.java.scrapper.domain.jooq.tables.pojos;

import java.beans.ConstructorProperties;
import java.io.Serializable;
import java.time.OffsetDateTime;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Users implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long tgId;
    private OffsetDateTime registered;

    public Users() {}

    public Users(Users value) {
        this.tgId = value.tgId;
        this.registered = value.registered;
    }

    @ConstructorProperties({ "tgId", "registered" })
    public Users(
        @NotNull Long tgId,
        @Nullable OffsetDateTime registered
    ) {
        this.tgId = tgId;
        this.registered = registered;
    }

    /**
     * Getter for <code>USERS.TG_ID</code>.
     */
    @jakarta.validation.constraints.NotNull
    @NotNull
    public Long getTgId() {
        return this.tgId;
    }

    /**
     * Setter for <code>USERS.TG_ID</code>.
     */
    public void setTgId(@NotNull Long tgId) {
        this.tgId = tgId;
    }

    /**
     * Getter for <code>USERS.REGISTERED</code>.
     */
    @Nullable
    public OffsetDateTime getRegistered() {
        return this.registered;
    }

    /**
     * Setter for <code>USERS.REGISTERED</code>.
     */
    public void setRegistered(@Nullable OffsetDateTime registered) {
        this.registered = registered;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Users other = (Users) obj;
        if (this.tgId == null) {
            if (other.tgId != null)
                return false;
        }
        else if (!this.tgId.equals(other.tgId))
            return false;
        if (this.registered == null) {
            if (other.registered != null)
                return false;
        }
        else if (!this.registered.equals(other.registered))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.tgId == null) ? 0 : this.tgId.hashCode());
        result = prime * result + ((this.registered == null) ? 0 : this.registered.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Users (");

        sb.append(tgId);
        sb.append(", ").append(registered);

        sb.append(")");
        return sb.toString();
    }
}
